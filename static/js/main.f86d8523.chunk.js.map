{"version":3,"sources":["../../src/index.jsx","App.js","index.js"],"names":["TextMarker","layouts","x","y","color","fontFamily","gap","i","id","label","opacity","pointer","size","transforms","yOffset","domId","markerRef","useRef","refs","layout","useState","visible","setVisible","useEffect","first","second","allTexts","current","viewportElement","querySelectorAll","noCollision","thisBox","getBBox","text","parentNode","getAttribute","otherBox","width","height","tx","ty","metrics","east","anchor","west","north","south","React","fill","fontSize","ref","data-layout","textAnchor","data-text-marker-pointer","map","key","visibility","data-text-marker-label","textMarker","element","sceneSettings","cubeRange","cubeZoffset","dataXoffset","dataYoffset","dataZoffset","paperXrange","window","innerWidth","paperYrange","innerHeight","sceneOptions","paper","xyPlane","sceneEdges","crossLines","emptySceneOptions","App","zoom","setZoom","rotateX","setRotateX","rotateY","setRotateY","viewSettings","camTx","camTy","camTz","cubeRx","cubeRy","cubeRz","camZoom","canvasToViewRatio","defaultCamZoffset","defaultCamOrientation","points","renderScene","data","catalog","star","type","location","z","symbol","push","name","labelSize","style","onWheel","e","destZoom","deltaY","onMouseMove","clientX","clientY","className","href","container","xRange","yRange","plugins","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f86d8523.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nconst collides = (first, second) => {\n  return first.x < second.x + second.width &&\n         first.x + first.width > second.x &&\n         first.y < second.y + second.height &&\n         first.y + first.height > second.y\n}\n\n\nconst TextMarker = ({\n    x,\n    y,\n    color,\n    fontFamily,\n    gap,\n    i,\n    id,\n    label,\n    opacity,\n    pointer,\n    size,\n    transforms,\n    yOffset,\n    layouts,\n  }) => {\n  opacity ||= 1\n  size ||= 16\n  pointer ||= 'â€¢'\n  gap ||= size/2\n  yOffset ||= size/3\n  layouts ||= ['east', 'west', 'south', 'north']\n  const domId = `${id}-${i}`\n\n  const markerRef = useRef()\n\n  let refs = {}\n  for (let layout of layouts) {\n    refs[layout] = useRef()\n  }\n\n  const [ visible, setVisible ] = useState(false)\n\n  const checkOverlab = () => {\n    const allTexts = markerRef.current.viewportElement.querySelectorAll(`[data-text-marker-label]:not([visibility=\"hidden\"])`)\n    for (let layout of layouts) {\n      let noCollision = true\n      let thisBox = refs[layout].current.getBBox()\n      for(let text of allTexts) {\n        if (text.parentNode.getAttribute('id') === domId) {\n          if (noCollision) {\n            // if we get to this point, it means there was no collision above \n            // so we can set the current layout to visible.\n            setVisible(layout)\n            return\n          }\n        } else {\n          let otherBox = text.getBBox()\n          if (collides(thisBox, otherBox)) {\n            noCollision = false\n          }\n        }\n      }\n      if (noCollision) {\n        setVisible(layout)\n        return\n      }\n    }\n    setVisible(false)\n  }\n\n  useEffect(() => {\n    checkOverlab()\n  }, [x,y])\n\n  const tx = transforms.tx(x)\n  const ty = transforms.ty(y)+yOffset\n\n  let labelX, labelAnchor\n\n  const metrics = {\n    east: {\n      x: tx + gap,\n      y: ty,\n      anchor: 'start',\n    },\n    west: {\n      x: tx - gap,\n      y: ty,\n      anchor: 'end',\n    },\n    north: {\n      x: tx,\n      y: ty - size,\n      anchor: 'middle',\n    },\n    south: {\n      x: tx,\n      y: ty + size,\n      anchor: 'middle',\n    },\n  }\n\n  return (\n    <g\n      fill={color}\n      fontSize={size}\n      fontFamily={fontFamily}\n      id={domId}\n      ref={markerRef}\n      data-layout={visible}\n    >\n      <text\n        x={tx}\n        y={ty}\n        textAnchor=\"middle\"\n        data-text-marker-pointer={true}\n      >\n        {pointer}\n      </text>\n      {layouts.map((layout) => (\n        <text\n          x={metrics[layout].x}\n          y={metrics[layout].y}\n          ref={refs[layout]}\n          key={layout}\n          opacity={opacity}\n          visibility={visible !== layout ? 'hidden' : false}\n          textAnchor={metrics[layout].anchor}\n          data-text-marker-label={true}\n        >\n          {label}\n        </text> \n      ))}\n    </g>\n  )\n}\n\nconst textMarkerPlugin = {\n  textMarker: (element, transforms) => {\n    const {\n      size,\n      color,\n      opacity,\n      id,\n      label,\n      pointer,\n      fontFamily,\n      yOffset,\n      layouts,\n    } = element\n    return element.x.map((x, i) => (\n      <TextMarker\n        {...{\n          x,\n          y: element.y[i],\n          color,\n          fontFamily,\n          i,\n          id,\n          label,\n          opacity,\n          pointer,\n          size,\n          transforms,\n          yOffset,\n          layouts,\n        }}\n        key={`${id}-${i}`}\n      />\n    ))\n  }\n}\n\nexport default textMarkerPlugin\n","import React, { useState } from 'react'\nimport BareMinimum2d from 'bare-minimum-2d'\nimport renderScene from '@mithi/bare-minimum-3d'\nimport catalog from './catalog.json'\nimport textMarker from 'bare-minimum-text-marker'\n\nconst sceneSettings = {\n  cubeRange: 20,\n  cubeZoffset: 0,\n  dataXoffset: 0,\n  dataYoffset: 0,\n  dataZoffset: .25,\n  paperXrange: window.innerWidth,\n  paperYrange: window.innerHeight,\n}\n\nconst sceneOptions = {\n  paper: false,\n  xyPlane: false,\n  sceneEdges: { color: \"#607D8B\", opacity: 1 },\n  crossLines: false,\n}\n\nconst emptySceneOptions = {\n  paper: false,\n  xyPlane: false,\n  sceneEdges: false,\n  crossLines: false,\n}\n\nfunction App() {\n  const [zoom, setZoom] = useState(2);\n  const [rotateX, setRotateX] = useState(0);\n  const [rotateY, setRotateY] = useState(0);\n\n  const viewSettings = {\n    camTx: 0,\n    camTy: 0,\n    camTz: 0,\n    cubeRx: rotateX,\n    cubeRy: 0,\n    cubeRz: rotateY,\n    camZoom: zoom,\n    canvasToViewRatio: 300,\n    defaultCamZoffset: 5,\n    defaultCamOrientation: \"z-forward-x-right\",\n  }\n\n  let { data } = renderScene(\n    viewSettings,\n    sceneSettings,\n    sceneOptions,\n    [],\n  )\n\n  let points = [\n    data[0]\n  ]\n  for (let star of catalog) {\n    let { data } = renderScene(\n      viewSettings,\n      sceneSettings,\n      emptySceneOptions,\n      [{\n        type: 'points',\n        x: [star.location.x],\n        y: [star.location.y],\n        z: [star.location.z],\n      }],\n    )\n\n    const labelSize = 16\n    \n    let layouts = []\n    if (star.symbol === 'â˜‰') {\n      layouts = ['south']\n    } else {\n      if (data[0].x > 0) {\n        layouts = ['east', 'north', 'south', 'west']\n      } else {\n        layouts = ['west', 'south', 'north', 'east']\n      }\n    }\n\n    points.push({\n      ...data[0],\n      label: star.name,\n      id: star.name,\n      pointer: star.symbol ? star.symbol : null,\n      type: 'textMarker',\n      opacity: 1,\n      size: labelSize, \n      yOffset: star.symbol !== 'â˜‰' ? labelSize/2.8 : labelSize/4, \n      color: 'white',\n      layouts: layouts,\n    })\n  }\n\n  return (\n    <div\n      style={{ width: '100%', height: window.innerHeight }}\n      onWheel={(e) => {\n        let destZoom = zoom + (e.deltaY/100)\n        if (destZoom > 0) {\n          setZoom(destZoom)\n        }\n      }}\n      onMouseMove={(e) => {\n        setRotateY(-e.clientX/3)\n        setRotateX(e.clientY/3)\n      }}\n    >\n      <div className=\"intro\">\n        <p>\n          This is a demo application of the \n          {' '}\n          <a href=\"https://www.npmjs.com/package/bare-minimum-text-marker\">bare-minimum-text-marker</a>\n          {' '}\n          plugin for\n          {' '}\n          <a href=\"https://github.com/mithi/bare-minimum-2d\">\n            bare-minimum-2d\n          </a>\n          {' '}\n          and \n          {' '}\n          <a href=\"https://github.com/mithi/bare-minimum-3d\">\n            3d\n          </a>\n          .\n        </p>\n        <p>\n          It allows you to place a text next to a point. The component\n          makes sure that text does not overlap. \n        </p> \n        <p>\n          This demo visualises the stellar neigborhood of the sun (â˜‰). \n        </p> \n        <p>\n          Data extracted from \n          {' '}\n          <a href=\"https://www.wikidata.org/\">wikidata</a>\n          {' '}\n          <small>(<a href=\"https://creativecommons.org/publicdomain/zero/1.0/\">CC0 License</a>)</small>\n        </p> \n      </div>\n      <BareMinimum2d\n        container={{\n          color: 'black',\n          opacity: 'black',\n          xRange: 1000,\n          yRange: 2000\n        }}\n        data={points}\n        plugins={[textMarker]}\n      />\n    </div>\n  )\n}\n\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}